from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm, AuthenticationForm, PasswordChangeForm
from django import forms
from .models import UserProfile
from django import forms
from .models import Task

class TaskForm(forms.ModelForm):
    class Meta:
        model = Task
        fields = ['title', 'content', 'deadline']  # Th√™m 'deadline' v√†o fields
        widgets = {
            'title': forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Nh·∫≠p ti√™u ƒë·ªÅ'}),
            'content': forms.Textarea(attrs={'class': 'form-control', 'placeholder': 'Nh·∫≠p n·ªôi dung', 'rows': 5}),
            'deadline': forms.DateTimeInput(attrs={'class': 'form-control', 'type': 'datetime-local', 'placeholder': 'Ch·ªçn th·ªùi h·∫°n'}),
        }

class UserProfileForm(forms.ModelForm):
    class Meta:
        model = UserProfile
        fields = ['avatar']

class RegisterForm(UserCreationForm):
    email = forms.EmailField(required=True)

    class Meta:
        model = User
        fields = ['username', 'email', 'password1', 'password2']

class LoginForm(AuthenticationForm):
    def confirm_login_allowed(self, user):
        if not user.is_active:
            raise forms.ValidationError(
                "üîí T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã v√¥ hi·ªáu h√≥a. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.",
                code='inactive',
            )
        
class UserPasswordChangeForm(PasswordChangeForm):
    old_password = forms.CharField(
        widget=forms.PasswordInput(attrs={'placeholder': 'M·∫≠t kh·∫©u hi·ªán t·∫°i'}),
        label="M·∫≠t kh·∫©u hi·ªán t·∫°i",
    )
    new_password1 = forms.CharField(
        widget=forms.PasswordInput(attrs={'placeholder': 'M·∫≠t kh·∫©u m·ªõi'}),
        label="M·∫≠t kh·∫©u m·ªõi",
    )
    new_password2 = forms.CharField(
        widget=forms.PasswordInput(attrs={'placeholder': 'X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi'}),
        label="X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi",
    )